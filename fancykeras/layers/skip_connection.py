# AUTOGENERATED! DO NOT EDIT! File to edit: ../../Notebooks/02_Layers/02_00_skip_connection.ipynb.

# %% auto 0
__all__ = ['SkipConnection']

# %% ../../Notebooks/02_Layers/02_00_skip_connection.ipynb 1
import tensorflow as tf
from tensorflow.keras import layers

# %% ../../Notebooks/02_Layers/02_00_skip_connection.ipynb 4
class Identity(layers.Layer):
    """Identity layer whose output corresponds to its input."""
    def __init__(self,
                 **kwargs, # Key-word arguments to be passed to the base constructor.
                 ):
        super(Identity, self).__init__(**kwargs)
    
    def build(self,
              input_shape, # Input shape.
              ):
        pass

    def call(self,
             inputs, # Layer inputs.
             ):
        return inputs

# %% ../../Notebooks/02_Layers/02_00_skip_connection.ipynb 5
class SkipConnection(layers.Layer):
    """Skip connection layer to easily introduce this architecture without moving away from the `Sequential` model."""

    def __init__(self,
                 main_path, # Layer (or set of layers) to apply to the input through the main path.
                 skip_path=None, # Layer (or set of layers) to apply to the input through the main path.
                 how="add", # How to combine the two paths. Can be either `"add"` or `"concat"`.
                 **kwargs, # Key-word arguments to be passed to the base constructor.
                 ):
        super(SkipConnection, self).__init__(**kwargs)
        self.main_path = main_path
        self.skip_path = Identity() if skip_path is None else skip_path
        self.combine = layers.Add() if how=="add" else layers.Concatenate()

    def build(self,
              input_shape, # Input shape.
              ):
        self.main_path.build(input_shape)
        self.skip_path.build(input_shape)
    
    def call(self,
             inputs, # Layer inputs.
             ):
        main_path = self.main_path(inputs)
        skip_path = self.skip_path(inputs)
        return self.combine([main_path, skip_path])
